{mode, {rate,50}}.
%% {mode, max}.

{duration, 1}.
%{duration, 15}.
{report_interval, 1}.

%% {concurrent, 1}.
{concurrent, 32}.

{code_paths, ["/tmp"]}.
{driver, file0}.
{file0_ip_list, [{{127,0,0,1}, 7071}]}.
%%% {file0_start_listener, {7071, "/tmp/SAM1/seq-tests/data"}}.
{value_generator_source_size, 16001001}.
%{key_generator, <<"32k-archive">>}.
{key_generator, {to_binstr, "32k-prefix-~w", {uniform_int, 1000}}}.
{file0_projection_path, "/Users/fritchie/b/src/misc/sequencer/examples/1.proj"}.

%% variations of put

%{operations, [{keygen_valuegen_then_null, 1}]}.
{value_generator, {fixed_bin, 32768}}.
%{operations, [{append_local_server, 1}]}.
%{operations, [{append_remote_server, 1}]}.
%{operations, [{cc_append_remote_server, 1}]}.
{operations, [{append_remote_server, 1}, {cc_append_remote_server, 1}]}.
%{operations, [{append_local_server, 1}, {append_remote_server, 1}]}.

%% variations of get

%% perl -e 'srand(time); $chunksize = 32768 ; foreach $file (@ARGV) { @fi = stat($file); $size = $fi[7]; $base = $file; $base =~ s|[^/]*/||g; for ($i = 0; $i < $size - $chunksize; $i += $chunksize) { printf "%d R %016x %08x %s\n", rand(999999), $i, $chunksize, $base; } }' data/*.* | sort -n | awk '{print $2, $3, $4, $5}' > /tmp/input.txt
%% {key_generator, {file_line_bin, "/tmp/input.txt"}}.
%% {value_generator_source_size, 1}.
%% {operations, [{read_raw_line_local, 1}]}.

%% {key_generator, {file_line_bin, "/tmp/input.txt"}}.
%% {value_generator_source_size, 1}.
%% %{operations, [{cc_read_raw_line_local, 1}]}.
%% {operations, [{read_raw_line_local, 1}, {cc_read_raw_line_local, 1}]}.
